class DisjointSet{
public:
    vector<int>par;
    vector<int>size;
    vector<int>rank;

    DisjointSet(int n){
        par.resize(n+1);
        size.resize(n+1,1);
        for(int i=0;i<=n;i++)
            par[i]=i;
        rank.resize(n+1,0);
    }

    int findPar(int node){
        if(par[node]==node) return node;
        return par[node]=findPar(par[node]);
    }

    void unionSize(int u,int v){
        u=findPar(u);
        v=findPar(v);
        if(u==v) return;
        if(size[u]<size[v]){
            par[u]=v;
            size[v]+=size[u];
        }else{
            par[v]=u;
            size[u]+=size[v];
        }
    }

    void unionRank(int u,int v){
        u=findPar(u);
        v=findPar(v);
        if(u==v) return;
        if(rank[u]>rank[v]){
            par[v]=u;
        }
        else if(rank[v]>rank[u]){
            par[u]=v;
        }
        else{
            par[u]=v;
            rank[v]++;
        }
    }

};
